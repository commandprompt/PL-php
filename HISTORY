Release 1.4
2010-07-12

Add support for PostgreSQL 8.4 and 9.0.
Add support for PHP 5.3

--------------
Release 1.3.5beta1
2007-10-15

Add support for parameter names.
Add support for PostgreSQL 8.3.

--------------
Release 1.3.3
2007-03-29

Some bug fixes and minor new features:
* Map E_STRICT in PHP errors to WARNING instead of ERROR in PostgreSQL.
* Fixed some memory leaks
* Add support for the "bool" type in return values
* Fixed bugs in argument handling
* Allow column names resembling numbers to be used

--------------
Release 1.3.2
2007-03-01

PL/php now links against PHP Embed SAPI instead of Apache mod_php.  This makes
it much more future-proof against internal PHP changes.  The old way of
linking against Apache is gone.

Added "configure" support, to detect the necessary utilities and libraries.

--------------
Release 1.3.1
2006-12-01

Minor cleanups in the Makefile.

--------------
Release 1.2
2005-12-13

Adds support for Set-Returning functions, and PostgreSQL 8.0.  Lots of code
cleanups.

--------------
Release 1.1
2005-12-05

What's in the 1.1 release:

- The build system no longer requires the PHP nor PostgreSQL sources.
  It uses PGXS, making it all much easier to build compared to the
  original 1.0 release.

- Rudimentary SPI support, meaning you can send queries to the server
  and get/process the results.

- Trigger support: you can write trigger functions, including the
  ability to abort or skip an operation, or modifying the tuple before
  insert/update.

- Function validation: PL/php will tell you right away if the function
  you are creating has a syntax error, and abort the creation, so no
  invalid functions make it into the database.

- You will receive any errors and warnings that PHP generates while
  executing your function.

PL/php 1.1 only works with PostgreSQL 8.0 and 8.1.  It has been tested
with PHP 4.4.1 only, but it should work with PHP 5 as well.


Differences from the original 1.0 release include:

- Error messages and warnings are passed from PHP to Postgres instead of
  being silently dropped.
- No more memory leaks in SPI functions.
- SPI results are now an opaque PHP resource, so it's no longer possible
  to crash the server by modifying it.
- Memory handling has been overhauled.  There are no known memory leaks.
  Huge SPI results can be processed.
- SRF support has been removed.  It will be added again in the next
  release.  The previous version was found to be too buggy and poorly
  thought-out.
- A private symbol table is created for each function, which facilitates
  the process of releasing memory used by the function.  This symbol
  table is cleared after each call.

